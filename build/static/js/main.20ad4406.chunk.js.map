{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/phonebook.js","components/App.js","index.js"],"names":["Filter","handleFilterChange","onChange","PersonForm","addPerson","handleNewNameChange","newName","handleNewNumberChange","newNumber","onSubmit","value","type","Persons","persons","nameFilter","removePerson","filter","person","name","toLowerCase","includes","map","index","key","number","onClick","id","Notification","message","className","baseUrl","axios","get","then","response","data","newPerson","post","personId","delete","updatedPerson","put","App","useState","setPersons","setNewName","setNewNumber","setNameFilter","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","phonebookService","currentPhonebook","event","preventDefault","target","personToUpdate","find","window","confirm","setTimeout","catch","concat","error","console","log","removedPersonId","removedPersonName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20ad4406.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({handleFilterChange}) => {\n  return (\n    <div>\n      filter shown with <input onChange={handleFilterChange}/>\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({addPerson, handleNewNameChange, newName, handleNewNumberChange, newNumber}) => {\n  return (\n    <>\n      <h2>Add new person</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input onChange={handleNewNameChange} value={newName} />\n        </div>\n        <div>\n          number: <input onChange={handleNewNumberChange} value={newNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({persons, nameFilter, removePerson}) => {\n  const displayPhoneBook = () => {\n    const filteredPhoneBook = persons.filter(person => person.name.toLowerCase().includes(nameFilter.toLowerCase()))\n    return filteredPhoneBook.map((person, index) => \n      <div key={index}>{person.name} {person.number}<button onClick={()=>removePerson(person.id)}>Delete</button></div>)\n  }\n\n  return (\n    <>\n      <h2>Numbers</h2>\n      {displayPhoneBook()}\n    </>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({message, type}) => {\n  if (message) {\n    return (\n      <div className={type}>\n        {message}\n      </div>\n    )\n  } else {\n    return (\n      null\n    )\n  }\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then(response => response.data)\n}\n\nconst remove = (personId) => {\n  const request = axios.delete(`${baseUrl}/${personId}`)\n  return request.then(response => response.data)\n}\n\nconst update = (personId, updatedPerson) => {\n  const request = axios.put(`${baseUrl}/${personId}`, updatedPerson)\n  return request.then(response => response.data)\n}\n\nexport default {getAll, create, remove, update}","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport Notification from './Notification'\nimport phonebookService from '../services/phonebook'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [nameFilter, setNameFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationType, setNotificationType] = useState(null)\n\n  useEffect(() =>{\n    phonebookService\n      .getAll()\n      .then(currentPhonebook => {\n        setPersons(currentPhonebook)\n      })\n  }, [])\n\n  const handleNewNameChange = (event) => {\n    event.preventDefault()\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumberChange = (event) => {\n    event.preventDefault()\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    event.preventDefault()\n    setNameFilter(event.target.value)\n  }\n\n  const personIsInPhonebook = () => {\n    return persons.map(person => person.name.toLowerCase()).includes(newName.toLowerCase())\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if(personIsInPhonebook()) {\n      const personToUpdate = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n      const updatedPerson = {\n        name: newName,\n        number: newNumber,\n        id: personToUpdate.id\n      }\n      if(window.confirm(`Would you like to update ${updatedPerson.name}`)) {\n        phonebookService\n          .update(personToUpdate.id, updatedPerson)\n          .then(() => {\n            setPersons(persons.map(person => person.id !== personToUpdate.id ? person : updatedPerson))\n            setNotificationMessage(`${newName} has been updated in the phonebook!`)\n            setNotificationType('success')\n            setTimeout(() => {\n              setNotificationMessage(null)\n              setNotificationType(null)\n            }, 5000)\n            setNewName('')\n            setNewNumber('')\n          })\n          .catch(() => {\n            setNotificationMessage(`${newName} has already been removed from the phone book!`)\n            setNotificationType('error')\n            setTimeout(() => {\n              setNotificationMessage(null)\n              setNotificationType(null)\n            }, 5000)\n            setPersons(persons.filter(person => person.name.toLowerCase() !== newName.toLowerCase()))\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n      }\n      phonebookService\n        .create(newPerson)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson))\n          setNotificationMessage(`${newName} has been added to the phonebook!`)\n          setNotificationType('success')\n          setTimeout(() => {\n            setNotificationMessage(null)\n            setNotificationType(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setNotificationMessage(`Error: ${error.response.data.error}`)\n          setNotificationType('error')\n          setTimeout(() => {\n            setNotificationMessage(null)\n            setNotificationType(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  }\n\n  const removePerson = (removedPersonId) => {\n    const removedPersonName = persons.filter(person => person.id === removedPersonId)[0].name\n    if(window.confirm(`Are you sure you would like to delete ${removedPersonName}`)) {\n      phonebookService\n        .remove(removedPersonId)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== removedPersonId))\n        })\n    }\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} type={notificationType} />\n      <Filter handleFilterChange={handleFilterChange} />\n      <PersonForm addPerson={addPerson} handleNewNameChange={handleNewNameChange} \n                  newName={newName} handleNewNumberChange={handleNewNumberChange} \n                  newNumber={newNumber} />\n      <Persons persons={persons} nameFilter={nameFilter} removePerson={removePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}